{"version":3,"file":"static/js/766.06b17986.chunk.js","mappings":"4KAGA,MA0FA,EA1FiBA,KACf,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,SAAU,GACVC,MAAO,GACPC,eAAe,KAGVC,EAAQC,IAAaL,EAAAA,EAAAA,UAAS,CAAC,GAahCM,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,QAAEC,GAAYJ,EAAEK,OACzCb,GAAac,IAAI,IACZA,EACH,CAACL,GAAgB,aAATE,EAAsBC,EAAUF,KACvC,EAcL,OACEK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJF,EAAAA,EAAAA,MAAA,QAAMI,SAdYX,IACpBA,EAAEY,iBACF,MAAMC,EArBSC,MACf,MAAMC,EAAY,CAAC,EAOnB,OANKxB,EAASG,WAAUqB,EAAUrB,SAAW,wBACxCH,EAASI,MAEF,eAAeqB,KAAKzB,EAASI,SACvCoB,EAAUpB,MAAQ,oBAFlBoB,EAAUpB,MAAQ,oBAIboB,CAAS,EAaSD,GACoB,IAAzCG,OAAOC,KAAKL,GAAkBM,OAChCC,MAAM,gCAGNtB,EAAUe,EACZ,EAMgCQ,YAAU,EAAAZ,SAAA,EACtCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOY,QAAQ,WAAUb,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,SACEP,KAAK,OACLoB,GAAG,WACHtB,KAAK,WACLC,MAAOX,EAASG,SAChB8B,SAAUzB,EACVS,UAAWX,EAAOH,SAAW,QAAU,KAExCG,EAAOH,WAAYgB,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAEZ,EAAOH,eAG9Da,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOY,QAAQ,QAAOb,SAAC,YACvBC,EAAAA,EAAAA,KAAA,SACEP,KAAK,QACLoB,GAAG,QACHtB,KAAK,QACLC,MAAOX,EAASI,MAChB6B,SAAUzB,EACVS,UAAWX,EAAOF,MAAQ,QAAU,KAErCE,EAAOF,QAASe,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAEZ,EAAOF,YAG3De,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,MAAA,SAAOe,QAAQ,gBAAeb,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SACEP,KAAK,WACLoB,GAAG,gBACHtB,KAAK,gBACLG,QAASb,EAASK,cAClB4B,SAAUzB,IACV,6BAKNW,EAAAA,EAAAA,KAAA,UAAQP,KAAK,SAASK,UAAU,gBAAeC,SAAC,uBAI9C,C","sources":["components/Settings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Settings.css';\r\n\r\nconst Settings = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    notifications: true,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    if (!formData.username) newErrors.username = 'Username is required';\r\n    if (!formData.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Email is invalid';\r\n    }\r\n    return newErrors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validate();\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      alert('Settings saved successfully!');\r\n      // Here you can dispatch an action or call API to save settings\r\n    } else {\r\n      setErrors(validationErrors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-container\">\r\n      <h2>User Settings</h2>\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n            className={errors.username ? 'error' : ''}\r\n          />\r\n          {errors.username && <span className=\"error-message\">{errors.username}</span>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className={errors.email ? 'error' : ''}\r\n          />\r\n          {errors.email && <span className=\"error-message\">{errors.email}</span>}\r\n        </div>\r\n\r\n        <div className=\"form-group checkbox-group\">\r\n          <label htmlFor=\"notifications\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"notifications\"\r\n              name=\"notifications\"\r\n              checked={formData.notifications}\r\n              onChange={handleChange}\r\n            />\r\n            Enable Notifications\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Save Settings\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"names":["Settings","formData","setFormData","useState","username","email","notifications","errors","setErrors","handleChange","e","name","value","type","checked","target","prev","_jsxs","className","children","_jsx","onSubmit","preventDefault","validationErrors","validate","newErrors","test","Object","keys","length","alert","noValidate","htmlFor","id","onChange"],"sourceRoot":""}